@page "/mycart"
@using Shop.DataModels.CustomModels
@using Shop.Client.Services
@inject IFrontEndService frontEndService
@inject ProtectedSessionStorage sessionStorage
@inject NavigationManager navigation 

<style>
    .small-container{
        max-width: 1080px;
        margin: auto;
        padding-left: 10px;
        padding-right: 10px;
    }

    .cart-page{
        margin: 20px auto;
    }

    table{
        width: 100%;
        border-collapse: collapse;
    }

    .cart-info{
        display: flex;
        flex-wrap: wrap;
    }

    th{
        text-align: left;
        padding: 5px;
        color: #ffffff;
        background: #808080;
        font-weight: normal;
    }

    td{
        padding: 10px 5px;
    }

    td input{
        width: 40px;
        height: 30px;
        padding: 5px;
    }

    td a{
        color: #ff523b;
        font-size: 12px;
    }

    td img{
        width: 80px;
        height: 80px;
        margin-right: 10px;
    }

    .total-price{
        display: flex;
        justify-content: flex-end;
    }

    .total-price table{
        border-top: 3px solid #ff523b;
        width: 100%;
        max-width: 400px;
    }

    td:last-child child{
        text-align: right;
    }

    th:last-child{
        text-align: right;
    }
</style>

<div class="small-container cart-page">
    @if(myCart != null && myCart.Count > 0)
            {
                <table>
                    <tr>
                        <th>Product</th>
                        <th>Remove</th>
                        <th>Price</th>
                        <th>Quantity</th>
                        <th>Subtotal</th>
                    </tr>
                    @foreach (var cart in myCart)
                    {
                        <tr>
                            <td>
                                <div class="cart-info">
                                    <img src="http://localhost:19380/@cart.ProductImage" alt="Product Photo" />
                                    <div>
                                        <p>@cart.ProductName</p>
                                    </div>
                                </div>
                            </td>
                            <td><a @onclick="(() => RemoveFromCart_Click(cart))" style="cursor:pointer;">Remove</a></td>
                            <td>₦@cart.Price</td>
                            <td><input type="number" @bind="cart.Quantity" min="1" max="@cart.AvailableStock" @onclick="@onQuantityChange" style="width:60px;"/></td>
                            <td>₦@(cart.Price*cart.Quantity).00</td>
                        </tr>
                    }
                </table>

                <div class="total-price">
                    <table>
                        <tr>
                            <td>Subtotal</td>
                            <td>
                                ₦@subTotal.00
                            </td>
                        </tr>
                        <tr>
                            <td>Shipping Charges</td>
                            <td>₦@shippingCharges.00</td>
                        </tr>
                        <tr>
                            <td>Total</td>
                            <td>₦@finalTotal.00</td>
                        </tr>
                        <tr>
                            <td>Shipping Address</td>
                            <td>
                                <textarea rows="3" cols="30" name="shippingaddress" placeholder="Shipping Address" @bind="shippingAddress">
                                </textarea>
                            </td>
                        </tr>
                        <tr>
                            <td>Payment Mode</td>
                            <td>
                                @paymentMode
                            </td>
                        </tr>
                        <tr>
                            <td></td>
                            <td>
                                <button type="button" value="Checkout" class="btn btn-primary" @onclick="@Checkout_Click">Checkout</button>
                            </td>
                        </tr>
                    </table>
                </div>
    }
    else
            {
                <hr/>
                <div style="text-align:center;">
                    <img src="./Images/ShoppingCart.png" />
                </div>
            }

</div> 


@code {
    [CascadingParameter]
    public EventCallback notify { get; set; }

    public List<CartModel> myCart { get; set; }
    public string shippingAddress { get; set; }
    public string paymentMode { get; set; }
    public string userName { get; set; }
    public string userEmail { get; set; }
    public int subTotal { get; set; }
    public int shippingCharges { get; set; }
    public int finalTotal { get; set; }

    protected override Task OnInitializedAsync()
    {
        
        shippingCharges = 100;
        subTotal = 0;
        paymentMode = "Cash on Delivery";

        return base.OnInitializedAsync();
    }

    private async Task RemoveFromCart_Click(CartModel cartItem)
    {
        myCart.Remove(cartItem);
        await sessionStorage.SetAsync("myCart", myCart);
        onQuantityChange();

        await notify.InvokeAsync();
    }

    private void onQuantityChange()
    {
        finalTotal = 0;
        subTotal = 0;
        foreach (var cart_item in myCart)
        {
            subTotal = subTotal + (cart_item.Price * cart_item.Quantity);
        }
        finalTotal = subTotal + shippingCharges;
    }

    private async Task Checkout_Click()
        {

        }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var result = await sessionStorage.GetAsync<List<CartModel>>("myCart");
            if (result.Success)
            {
                myCart = result.Value;
                foreach (var cart_item in myCart)
                {
                    subTotal = subTotal + (cart_item.Price * cart_item.Quantity);
                }

                if (myCart != null && myCart.Count > 0)
                {
                    shippingAddress = myCart.FirstOrDefault().ShippingAddress;
                }
            }

            finalTotal = subTotal + shippingCharges;

            StateHasChanged();
        }

    }
    /*
    if (cartCount > 0)
    {
    }
    else
    {
        <a href="/mycart">
            <i class="fa fa-shopping-cart" style="font-size:48px; color:white">
                <span style="font-size:35px; vertical-align:top; padding:7px; color:white;" />
            </i>
        </a>
    }
   */
    }

